// Generated by view binder compiler. Do not edit!
package ru.mirea.maiorovaa.mireaproject.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import ru.mirea.maiorovaa.mireaproject.R;

public final class FragmentFileOperationsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final FloatingActionButton fabCreateRecord;

  @NonNull
  public final TextView textViewFileContent;

  @NonNull
  public final TextView textViewFileName;

  private FragmentFileOperationsBinding(@NonNull LinearLayout rootView,
      @NonNull FloatingActionButton fabCreateRecord, @NonNull TextView textViewFileContent,
      @NonNull TextView textViewFileName) {
    this.rootView = rootView;
    this.fabCreateRecord = fabCreateRecord;
    this.textViewFileContent = textViewFileContent;
    this.textViewFileName = textViewFileName;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentFileOperationsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentFileOperationsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_file_operations, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentFileOperationsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.fab_create_record;
      FloatingActionButton fabCreateRecord = ViewBindings.findChildViewById(rootView, id);
      if (fabCreateRecord == null) {
        break missingId;
      }

      id = R.id.text_view_file_content;
      TextView textViewFileContent = ViewBindings.findChildViewById(rootView, id);
      if (textViewFileContent == null) {
        break missingId;
      }

      id = R.id.text_view_file_name;
      TextView textViewFileName = ViewBindings.findChildViewById(rootView, id);
      if (textViewFileName == null) {
        break missingId;
      }

      return new FragmentFileOperationsBinding((LinearLayout) rootView, fabCreateRecord,
          textViewFileContent, textViewFileName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
